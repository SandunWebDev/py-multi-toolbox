name: Base Workflow - CI/CD

# Controls when the workflow will run.
on:
    # Triggers the workflow on push or pull request events but only for the study branch.
    push:
        branches: [gh-action-check]
    pull_request:
        branches: [gh-action-check]

    # Allows you to run this workflow manually from the Actions tab.
    workflow_dispatch:

# Environment variables available in all jobs.
env:
    PYTHON_VERSION: 3.9.6

# Default options applicable to all jobs.
defaults:
    run:
        shell: bash
        working-directory: ./

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
    # This workflow contains a single job called "build".
    build:
        name: 'Build Stage'

        # The type of runner that the job will run on.
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job.
        steps:
            # Displaying Initial Data About Action Triggered.
            - name: Initialization
              run: |
                  echo ""
                  echo "Triggered By : ${{ github.event_name }} Event"
                  echo "Current Repository : ${{ github.repository }} ON ${{ github.ref }} Branch "
                  echo "Job OS : ${{ runner.os }}"

            # Checks-out your repository under $GITHUB_WORKSPACE, so our job can access it. (Notice using third-party action.)
            - name: Checkout Repo's Code
              uses: actions/checkout@v2

            - name: List Files in the Repository
              run: |
                  echo $(pwd)
                  ls -lsa ${{ github.workspace }}

            - name: Checking Python 1
              run: |
                  python --version
                  node --version
                  poetry --version

            - name: Installing Python ${{ env.PYTHON_VERSION }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ env.PYTHON_VERSION }}

            - name: Checking Python 2
              run: python --version

            - name: Job Status
              run: echo "JOB STATUS - ${{ job.status }}"
